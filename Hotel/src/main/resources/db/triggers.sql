CREATE OR REPLACE TRIGGER NBP09.NBP_ADDRESS_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_ADDRESS
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_ADDRESS', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_BOOKING_STATUS_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_BOOKING_STATUS
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_BOOKING_STATUS', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_BOOKINGS_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_BOOKINGS
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_BOOKINGS', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_GUESTS_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_GUESTS
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_GUESTS', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_PAYMENT_STATUS_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_PAYMENT_STATUS
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_PAYMENT_STATUS', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_PAYMENT_TYPE_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_PAYMENT_TYPE
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_PAYMENT_TYPE', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_PAYMENTS_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_PAYMENTS
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_PAYMENTS', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_ROOM_BOOKED_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_ROOM_BOOKED
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_ROOM_BOOKED', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_ROOM_STATUS_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_ROOM_STATUS
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_ROOM_STATUS', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_ROOM_TYPE_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_ROOM_TYPE
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_ROOM_TYPE', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_ROOMS_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_ROOMS
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_ROOMS', SYSDATE, USER);
end;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_ROOMS_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_ROOMS
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_ROOMS', SYSDATE, USER);
END;
/

CREATE OR REPLACE TRIGGER NBP09.NBP_STAFF_ROOMS_CHANGE_TRIGGER
    AFTER INSERT OR UPDATE OR DELETE
    ON NBP09.NBP_STAFF_ROOMS
    FOR EACH ROW
DECLARE
    log_action VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        log_action := 'INSERT';
    ELSIF UPDATING THEN
        log_action := 'UPDATE';
    ELSE
        log_action := 'DELETE';
    END IF;

    INSERT INTO NBP.NBP_LOG (ID, ACTION_NAME, TABLE_NAME, DATE_TIME, DB_USER)
    VALUES (NBP.NBP_LOG_ID_SEQ.NEXTVAL, log_action, 'NBP09.NBP_STAFF_ROOMS', SYSDATE, USER);
END;
